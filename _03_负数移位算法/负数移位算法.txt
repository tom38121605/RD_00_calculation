
-----------------------负数用移位代替除法-----ok----------------------


其实这是因为除法是向0取整，而右移位是向负取整

-3/2=-1.5=-1(向0取整),-3>>1=-1.5=-2（向负取整）；

如果我们需要右移达到的效果和除法一样，可以采取下列公式：

假设除数为2^N，负数x的除法可以用以下方法来代替：

(x + 2^N - 1) >> N         //--ok





======================


但我发现当执行数值小的负数位移操作时，不管位移多少位，结果都是-1，比如-3>>6 = -1，

为了达到我的目的，我用如下操作代替：

i = 1 <<6;

-3/ i  =》 0；

这样就能得到0了。

但是换成这样的除法操作后，我量化代码的执行时间由（12852时钟）变成（428614 时钟），



---

3                00000011
-3              11111101
(-3)>>6     1111111b     -1d


---


除数为2的N次幂时，正数的除法与移位是相等的，但是负数的除法与移位并不等价。
假设除数为2^N，负数x的除法可以用以下方法来代替：
(x + 2^N - 1) >> N
可以验证下。

------

不错，算了下，这个可以，虽然在这里程序执行会多几条指令，但在接下来的压缩步骤中会节省多时间！



