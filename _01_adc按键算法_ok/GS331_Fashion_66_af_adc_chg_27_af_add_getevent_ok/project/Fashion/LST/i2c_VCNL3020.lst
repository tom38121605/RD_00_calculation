C51 COMPILER V9.56.0.0   I2C_VCNL3020                                                      05/15/2019 11:29:50 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE I2C_VCNL3020
OBJECT MODULE PLACED IN .\Output\i2c_VCNL3020.obj
COMPILER INVOKED BY: C:\Keil_c51\C51\BIN\C51.EXE Code\i2c_VCNL3020.c LARGE OPTIMIZE(4,SPEED) BROWSE INCDIR(..\..\Include
                    -) DEFINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\LST\i2c_VCNL3020.lst) TABS(3) OBJECT(.\Output\i2c_VCNL3020.obj)

line level    source

   1          #include "N76E003.h"
   2          #include "SFR_Macro.h"
   3          #include "Function_define.h"
   4          #include "Common.h"
   5          #include "Delay.h"
   6          #include <string.h>
   7          
   8          
   9          #include "i2c_VCNL3020.h"
  10          
  11          
  12           
  13          //soft i2c
  14          
  15          #define IIC_SCL_PIN         P03                  
  16          #define SCL_OPENDRAIN_MODE  P03_OpenDrain_Mode   
  17          
  18          #define IIC_SDA_PIN         P01                  
  19          #define SDA_OPENDRAIN_MODE  P01_OpenDrain_Mode  
  20          #define SDA_INPUT_MODE      P01_Input_Mode       
  21           
  22          #define SLAVEADDR_SLA_SLA       0x26  //0xa0  
  23          
  24          
  25          #define SLAVEADDR_SLA_WR               0
  26          #define SLAVEADDR_SLA_RD               1
  27          
  28          #define  REG00  0x80
  29          #define  REG01  0x81
  30          #define  REG02  0x82
  31          #define  REG03  0x83
  32          
  33          #define  REG07  0x87
  34          #define  REG08  0x88
  35          #define  REG09  0x89
  36          #define  REG10  0x8A
  37          #define  REG11  0x8B
  38          #define  REG12  0x8C
  39          #define  REG13  0x8D
  40          #define  REG14  0x8E
  41          #define  REG15  0x8F
  42          //#define  REG16  0x90
  43          
  44           
  45            
  46          UINT8 flg_addr_log=0;
  47           
  48           
  49          void delay_1us()  //16M
  50          {
  51   1       
  52   1            //_nop_();  
  53   1         
  54   1      }
C51 COMPILER V9.56.0.0   I2C_VCNL3020                                                      05/15/2019 11:29:50 PAGE 2   

  55          
  56          void delay_2us()  //16M
  57          {  
  58   1         _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); 
  59   1         _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); 
  60   1         _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); 
  61   1         _nop_();
  62   1      }
  63          
  64          void delay_4us()  //16M
  65          {
  66   1         _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); 
  67   1         _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); 
  68   1         _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); 
  69   1         
  70   1         _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); 
  71   1         _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); 
  72   1         _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); 
  73   1         
  74   1         _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); 
  75   1         _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); 
  76   1         _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); 
  77   1            
  78   1      }
  79          
  80          
  81          
  82          void Init_I2C_soft(void)
  83          {                          
  84   1         SCL_OPENDRAIN_MODE;  //scl
  85   1         SDA_OPENDRAIN_MODE;  //sda
  86   1         
  87   1         
  88   1      }
  89          
  90          void SDA_OUT(void)
  91          {
  92   1         SDA_OPENDRAIN_MODE;   
  93   1      }
  94          
  95          void SDA_IN(void)
  96          {
  97   1         SDA_INPUT_MODE;   
  98   1      }
  99          
 100          
 101          void IIC_Start(void)
 102          {
 103   1         SDA_OUT(); 
 104   1         
 105   1         IIC_SDA_PIN=1;   
 106   1         
 107   1         IIC_SCL_PIN=1;
 108   1         delay_4us();
 109   1         
 110   1         IIC_SDA_PIN=0;   
 111   1         delay_4us();
 112   1         
 113   1         IIC_SCL_PIN=0;    
 114   1      }   
 115          
 116          void IIC_Stop(void)
C51 COMPILER V9.56.0.0   I2C_VCNL3020                                                      05/15/2019 11:29:50 PAGE 3   

 117          {
 118   1         SDA_OUT(); 
 119   1         
 120   1         IIC_SCL_PIN=0;
 121   1         
 122   1         IIC_SDA_PIN=0;  
 123   1         delay_4us();
 124   1         
 125   1         IIC_SCL_PIN=1; 
 126   1         
 127   1         IIC_SDA_PIN=1; 
 128   1         delay_4us();                           
 129   1      } 
 130          
 131          void IIC_Ack(void)
 132          {
 133   1         SDA_OUT();
 134   1         
 135   1         IIC_SCL_PIN=0;
 136   1         
 137   1         IIC_SDA_PIN=0;
 138   1         delay_2us();
 139   1         IIC_SCL_PIN=1;
 140   1         delay_2us();
 141   1         IIC_SCL_PIN=0;
 142   1      }
 143          
 144          void IIC_NAck(void)
 145          {
 146   1         SDA_OUT();
 147   1      
 148   1         IIC_SCL_PIN=0;
 149   1      
 150   1         IIC_SDA_PIN=1;   
 151   1         delay_2us();
 152   1         
 153   1         IIC_SCL_PIN=1;
 154   1         delay_2us();
 155   1         
 156   1         IIC_SCL_PIN=0;
 157   1      }      
 158          
 159          
 160          
 161          UINT8 IIC_Wait_Ack(void)
 162          {
 163   1         
 164   1         UINT8 ucErrTime=0;
 165   1         
 166   1         SDA_IN();      
 167   1         
 168   1         IIC_SDA_PIN=1;delay_1us();      
 169   1         IIC_SCL_PIN=1;delay_1us();    
 170   1         
 171   1         while(IIC_SDA_PIN==1)
 172   1         {
 173   2            ucErrTime++;
 174   2            //if(ucErrTime>250)
 175   2            if(ucErrTime>2)
 176   2            {
 177   3               //--IIC_Stop();
 178   3               
C51 COMPILER V9.56.0.0   I2C_VCNL3020                                                      05/15/2019 11:29:50 PAGE 4   

 179   3               IIC_SCL_PIN=0; 
 180   3               return 1;
 181   3      
 182   3            }
 183   2         }
 184   1         IIC_SCL_PIN=0; 
 185   1         
 186   1         return 0;  
 187   1      } 
 188          
 189          
 190          void IIC_Send_Byte(UINT8 txd)
 191          {   
 192   1         
 193   1          UINT8 t;   
 194   1          SDA_OUT();        
 195   1          IIC_SCL_PIN=0; 
 196   1         
 197   1          for(t=0;t<8;t++)
 198   1          {              
 199   2      
 200   2               //if(txd&0x80)
 201   2               if((txd&0x80)>>7)
 202   2                  IIC_SDA_PIN=1;
 203   2               else
 204   2                  IIC_SDA_PIN=0;
 205   2               
 206   2               //txd<<=1;   
 207   2               
 208   2               delay_2us();    
 209   2               IIC_SCL_PIN=1;
 210   2               delay_2us(); 
 211   2               IIC_SCL_PIN=0;   
 212   2               delay_2us();
 213   2      
 214   2               txd<<=1;          
 215   2          }   
 216   1         
 217   1      }        
 218          
 219          
 220          UINT8 IIC_Read_Byte(UINT8 ack) 
 221          {
 222   1         UINT8 i=0;
 223   1         UINT8 receive=0;
 224   1         
 225   1         SDA_IN();    
 226   1         
 227   1         for(i=0;i<8;i++ )
 228   1         {
 229   2            IIC_SCL_PIN=0; 
 230   2            delay_2us();
 231   2            IIC_SCL_PIN=1;
 232   2            
 233   2            receive<<=1;
 234   2            
 235   2            if(IIC_SDA_PIN==1) 
 236   2               receive++;   
 237   2            
 238   2            delay_1us(); 
 239   2        }      
 240   1         
C51 COMPILER V9.56.0.0   I2C_VCNL3020                                                      05/15/2019 11:29:50 PAGE 5   

 241   1        if (!ack)
 242   1          IIC_NAck(); 
 243   1        else
 244   1          IIC_Ack();  
 245   1         
 246   1        return receive;
 247   1      }
 248          
 249          
 250          void VCNL3020_WriteOneByte(UINT8 iaddr, UINT8 idata1)
 251          {     
 252   1             
 253   1         IIC_Start();  
 254   1      
 255   1         IIC_Send_Byte(SLAVEADDR_SLA_SLA | SLAVEADDR_SLA_WR);  
 256   1         flg_addr_log = IIC_Wait_Ack(); 
 257   1      
 258   1         
 259   1         IIC_Send_Byte(iaddr);   
 260   1         IIC_Wait_Ack();      
 261   1         
 262   1         IIC_Send_Byte(idata1); 
 263   1         IIC_Wait_Ack();  
 264   1         
 265   1        
 266   1         IIC_Stop(); 
 267   1         
 268   1      //   if (flg_addr_log==0) 
 269   1      //      iputs0("I2C write ok\r\n");   //--test
 270   1         
 271   1      }
 272          
 273          UINT8 VCNL3020_ReadOneByte(UINT8 iaddr)
 274          {             
 275   1         UINT8 temp=0;     
 276   1          
 277   1         IIC_Start();  
 278   1      
 279   1         IIC_Send_Byte(SLAVEADDR_SLA_SLA | SLAVEADDR_SLA_WR);   
 280   1         IIC_Wait_Ack();    
 281   1         
 282   1         IIC_Send_Byte(iaddr);    
 283   1         IIC_Wait_Ack();
 284   1      
 285   1         //--IIC_Stop(); 
 286   1             
 287   1         IIC_Start();  
 288   1      
 289   1         IIC_Send_Byte(SLAVEADDR_SLA_SLA | SLAVEADDR_SLA_RD);    
 290   1         IIC_Wait_Ack();   
 291   1         
 292   1         temp=IIC_Read_Byte(0);  //or 1
 293   1         IIC_Stop(); 
 294   1      
 295   1         return temp;
 296   1      }
 297          
 298          
 299          
 300           
 301          

C51 COMPILER V9.56.0.0   I2C_VCNL3020                                                      05/15/2019 11:29:50 PAGE 6   


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    385    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      1    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
